<!DOCTYPE html>
	<html>
	<head>
		<title>Three.js - Game</title>
		<meta charset="utf-8">
		<style>
			body {
				margin: 0;
				padding: 0;
				overflow: hidden;
			}
		</style>
		<script type="text/javascript" src="Scripts/Three.js"></script>
		<script type="text/javascript" src="Scripts/RequestAnimationFrame.js"></script>
        <script type="text/javascript" src="Scripts/Surface.js"></script>
		<script type="text/javascript" src="Scripts/Player.js"></script>
		<script type="text/javascript" src="Scripts/Skybox.js"></script>



		<script type="text/javascript">
		    // More code to go here
		    var
	            camera,
	            scene,
	            renderer;

		    var uniforms, material, mesh;
		    function doImgpop(e) {

		    }
		    function initialize() {
		        var
		        grass,
		        meshCanvas,
		        plane,
		        i, j, uvs;


		        camera = new THREE.Camera(90, window.innerWidth / window.innerHeight, 1, 1000000);

		        camera.position.x = 30;
		        camera.position.y = 70.711; // 30 degree angle from the xz plane
                camera.position.z = 30;

				len = 1000;
		        camera.position.x = len*Math.sin(3.14/4);
		        camera.position.y = len*Math.cos(35/180*3.14);
		        camera.position.z = len * Math.sin(3.14/4);

		        scene = new THREE.Scene();




		        scene.addObject(CreateTiledSurface(16,8,'Assets/TiledSurface/Map.bmp','Assets/TiledSurface/TextureMapSpace.png'));

		        CreatePlayerModel(function(group){group.position.x=800; group.position.z=800; scene.addObject( group );}, 10);


		        /*var urlPrefix = "Skybox/";
				var urls = [ urlPrefix + "posx.png", urlPrefix + "negx.png",
				    urlPrefix + "posy.png", urlPrefix + "negy.png",
				    urlPrefix + "posz.png", urlPrefix + "negz.png" ];
				var textureCube = THREE.ImageUtils.loadTextureCube( urls );
				var shader = THREE.ShaderUtils.lib["cube"];
				shader.uniforms["tCube"].texture = textureCube; // textureCube has been init before
				var material = new THREE.MeshShaderMaterial({
				    fragmentShader  : shader.fragmentShader,
				    vertexShader    : shader.vertexShader,
				    uniforms        : shader.uniforms
				});
				// build the skybox Mesh
				skyboxMesh  = new THREE.Mesh( new THREE.CubeGeometry( 100000, 100000, 100000, 1, 1, 1, null, true ), material );
				// add it to the scene
				scene.addObject( skyboxMesh );*/

				scene.addObject(CreateSkybox());


		        renderer = new THREE.WebGLRenderer({ antialias: true });
		        renderer.setSize(window.innerWidth, window.innerHeight);

		        document.body.appendChild(renderer.domElement);

		    }
		    function animate() {
		        requestAnimationFrame(animate);

		        render();
		    }
		    function render() {
		        renderer.render(scene, camera);
		    }

                </script>
	</head>
	<body>
		<script type="text/javascript">
		    initialize();

		    animate();



		</script>
	</body>
	</html>